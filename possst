// Fetch data from MongoDB when the component mounts
// useEffect(() => {
//   if (postedBy) {
//     axios
//       .get(`http://localhost:8080/post/posts/${postedBy}`)
//       .then((response) => {

//         dispatch(postActions.setPosts(response.data));                                                                                                                                                                                                                                                                                                                                                                                                
//       })
//       .catch((error) => {
//         console.error('Error fetching posts:', error);
//       });
//   }
// }, [postedBy, dispatch]);


  // Update an issue
  updateIssueStart: (state) => {
    state.loading = true;
    state.error = null;
  },
  updateIssueSuccess: (state, action) => {
    const { issueId, updatedIssue } = action.payload;
    const issueIndex = state.issues.findIndex((issue) => issue.id === issueId);
    if (issueIndex !== -1) {
      state.issues[issueIndex] = updatedIssue;
    }
    state.loading = false;
    state.error = null;
  },
  updateIssueFailure: (state, action) => {
    state.loading = false;
    state.error = action.payload;
  },